/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frameGestao.java
 *
 * Created on 2/Dez/2010, 15:44:10
 */

package javaapplication1;

import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Milton
 */
public class frameGestao extends javax.swing.JFrame implements Observer {



    Nucleo nucleo=null;
    /** Creates new form frameGestao */
    public frameGestao(Nucleo nuc) throws Exception{
        initComponents();
        nucleo = nuc;
        nucleo.addObserver(this);
        
        this.actualiza();

    }

    public void actualiza() throws Exception{
        if(nucleo.getEnab()) this.setEnabled(true);
        if(nucleo.getAlterado().equals("docs")){
           this.actDocs();
           lblDocs.setText(nucleo.contDocs());
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("author")){
           this.actAutor();
           lblAutor.setText(nucleo.contAutor());
           actualizarComboAutor();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("specific")){
           this.actEspecifico();
           lblSpec.setText(nucleo.contSpec());
           actEspecifico();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("user")){
           this.actListUser();
           lblUser.setText(nucleo.contUsers());
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("country")){
           this.actPais();
           lblPais.setText(nucleo.contPais());
           actualizarComboPais();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("area")){
           this.actTema();
           lblTema.setText(nucleo.contTema());
           actualizarComboTema();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("type")){
           this.actTipo();
           lblTipo.setText(nucleo.contTipo());
           actualizarComboType();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("univ")){
           this.actUniv();
           lblUniv.setText(nucleo.contUniv());
           actualizarComboUniv();
           nucleo.setAlterado();
        }
        if(nucleo.getAlterado().equals("")){
        lblAutor.setText(nucleo.contAutor());
        lblDocs.setText(nucleo.contDocs());
        lblUniv.setText(nucleo.contUniv());
        lblUser.setText(nucleo.contUsers());
        lblPais.setText(nucleo.contPais());
        lblTema.setText(nucleo.contTema());
        lblSpec.setText(nucleo.contSpec());
        lblTipo.setText(nucleo.contTipo());
        this.actDocs();
        this.actAutor();
        this.actEspecifico();
        this.actListUser();
        this.actPais();
        this.actTema();
        this.actTipo();
        this.actUniv();
        actualizarComboAutor();
        actualizarComboEspec();
        actualizarComboTema();
        actualizarComboType();
        actualizarComboUniv();
        actualizarComboUser();
        actualizarComboPais();
        }
    }

    public void update(Observable observable, Object obj){
        try {
            this.actualiza();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblDocs = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblUniv = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblAutor = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblTema = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblSpec = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lblPais = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtpesqDoc = new javax.swing.JTextField();
        comboAutorDoc = new javax.swing.JComboBox();
        comboTemaDoc = new javax.swing.JComboBox();
        comboSpecDoc = new javax.swing.JComboBox();
        comboUnivDoc = new javax.swing.JComboBox();
        comboTypeDoc = new javax.swing.JComboBox();
        comboUserDoc = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDoc = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        bComments = new javax.swing.JButton();
        apagarDocs = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaUsers = new javax.swing.JTable();
        comboPais3 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtUniv = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaUniv = new javax.swing.JTable();
        comboPais2 = new javax.swing.JComboBox();
        apagarUniv = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        verAutor = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        comboPais1 = new javax.swing.JComboBox();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabelaAutor = new javax.swing.JTable();
        apagarAutor = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTema = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tabelaTema = new javax.swing.JTable();
        apagarTema = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtSpec = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabelaEspecifico = new javax.swing.JTable();
        comboArea1 = new javax.swing.JComboBox();
        apagarSpec = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        tabelaPais = new javax.swing.JTable();
        apagarPais = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        verTipo = new javax.swing.JButton();
        addTipo = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        tabelaTipo = new javax.swing.JTable();
        apagarTipo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        lblDocs.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblDocs.setText("jLabel8");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel9.setText("Nº Utilizadores");

        lblUniv.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblUniv.setText("jLabel10");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel11.setText("Nº Documentos");

        lblAutor.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblAutor.setText("jLabel12");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel13.setText("Nº Autores");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel14.setText("Nº Universidade");

        lblUser.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblUser.setText("jLabel16");

        jToggleButton2.setText("Sair");
        jToggleButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton2MouseClicked(evt);
            }
        });
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Escolher outra BD");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 48));
        jLabel15.setText("BibliUM");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel15)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(44, 44, 44))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel16.setText("Nº Temas");

        lblTema.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblTema.setText("jLabel12");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel20.setText("Nº Especificos");

        lblSpec.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblSpec.setText("jLabel12");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel21.setText("Nº Paises");

        lblPais.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblPais.setText("jLabel12");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel22.setText("Nº Tipos");

        lblTipo.setFont(new java.awt.Font("Tahoma", 0, 14));
        lblTipo.setText("jLabel12");

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Gráficos:"));

        jButton5.setText("Ver");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setText("Ver");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton16.setText("Ver");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Ver");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel7.setText("Número de Downloads:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel8.setText("Ficheiros por Utilizador:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel10.setText("Ficheiros mais utilizados:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel12.setText("Melhores classificações:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton9))
                .addGap(6, 6, 6)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jButton17))
                .addGap(106, 106, 106))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUser)
                            .addComponent(lblDocs)
                            .addComponent(lblUniv)
                            .addComponent(lblAutor)
                            .addComponent(lblTema)
                            .addComponent(lblSpec)
                            .addComponent(lblPais)
                            .addComponent(lblTipo))
                        .addGap(131, 131, 131)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(602, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addGap(6, 6, 6)
                .addComponent(jToggleButton2)
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(22, 22, 22)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jToggleButton1)
                            .addComponent(jToggleButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel14)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel13)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel16)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel20)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel21)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblUser)
                        .addGap(6, 6, 6)
                        .addComponent(lblDocs)
                        .addGap(6, 6, 6)
                        .addComponent(lblUniv)
                        .addGap(6, 6, 6)
                        .addComponent(lblAutor)
                        .addGap(6, 6, 6)
                        .addComponent(lblTema)
                        .addGap(6, 6, 6)
                        .addComponent(lblSpec)
                        .addGap(6, 6, 6)
                        .addComponent(lblPais)
                        .addGap(6, 6, 6)
                        .addComponent(lblTipo)))
                .addGap(38, 38, 38))
        );

        jTabbedPane1.addTab("Home", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Pesquisa");

        txtpesqDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpesqDocKeyPressed(evt);
            }
        });

        comboAutorDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Autor" }));
        comboAutorDoc.setToolTipText("");
        comboAutorDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboAutorDocMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboAutorDocMousePressed(evt);
            }
        });
        comboAutorDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboAutorDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboAutorDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAutorDocItemStateChanged(evt);
            }
        });
        comboAutorDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAutorDocActionPerformed(evt);
            }
        });
        comboAutorDoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboAutorDocFocusGained(evt);
            }
        });
        comboAutorDoc.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                comboAutorDocHierarchyChanged(evt);
            }
        });
        comboAutorDoc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboAutorDocPropertyChange(evt);
            }
        });
        comboAutorDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboAutorDocKeyPressed(evt);
            }
        });

        comboTemaDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tema" }));
        comboTemaDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboTemaDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboTemaDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTemaDocItemStateChanged(evt);
            }
        });
        comboTemaDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTemaDocActionPerformed(evt);
            }
        });

        comboSpecDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Especifico" }));
        comboSpecDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboSpecDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboSpecDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSpecDocItemStateChanged(evt);
            }
        });

        comboUnivDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Univ" }));
        comboUnivDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboUnivDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboUnivDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboUnivDocItemStateChanged(evt);
            }
        });

        comboTypeDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipo" }));
        comboTypeDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboTypeDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboTypeDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTypeDocItemStateChanged(evt);
            }
        });

        comboUserDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "User" }));
        comboUserDoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboUserDocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboUserDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboUserDocItemStateChanged(evt);
            }
        });

        tabelaDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabelaDoc.setName("tabelaDoc"); // NOI18N
        tabelaDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaDocMousePressed(evt);
            }
        });
        tabelaDoc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaDocFocusGained(evt);
            }
        });
        tabelaDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaDocKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaDocKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaDoc);

        jButton1.setText("Ver");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bComments.setText("Comentários");
        bComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCommentsActionPerformed(evt);
            }
        });

        apagarDocs.setText("Apagar");
        apagarDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarDocsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(txtpesqDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(comboAutorDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboTemaDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboSpecDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboUnivDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboUserDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(apagarDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bComments))))
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(apagarDocs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bComments))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtpesqDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboSpecDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboTemaDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboUserDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboUnivDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboAutorDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Documentos", jPanel2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Username");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jButton3.setText("Ver");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tabelaUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaUsers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaUsersKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaUsers);

        comboPais3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "País" }));
        comboPais3.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboPais3PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboPais3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPais3ItemStateChanged(evt);
            }
        });
        comboPais3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPais3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(comboPais3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(comboPais3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Utilizadores", jPanel3);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel5.setText("Universidade");

        txtUniv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUnivKeyPressed(evt);
            }
        });

        jButton12.setText("Ver");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Adicionar");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });

        tabelaUniv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaUniv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaUnivMousePressed(evt);
            }
        });
        tabelaUniv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaUnivKeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(tabelaUniv);

        comboPais2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "País" }));
        comboPais2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboPais2PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        apagarUniv.setText("Apagar");
        apagarUniv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarUnivMouseClicked(evt);
            }
        });
        apagarUniv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarUnivActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(txtUniv, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarUniv, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(comboPais2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(apagarUniv)
                        .addGap(6, 6, 6)
                        .addComponent(jButton12)
                        .addGap(6, 6, 6)
                        .addComponent(jButton13))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtUniv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(comboPais2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Universidade", jPanel6);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel4.setText("Autor");

        txtAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAutorKeyPressed(evt);
            }
        });

        verAutor.setText("Ver");
        verAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verAutorMouseClicked(evt);
            }
        });
        verAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verAutorActionPerformed(evt);
            }
        });

        jButton10.setText("Adicionar");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        comboPais1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "País" }));
        comboPais1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboPais1PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        comboPais1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPais1ItemStateChanged(evt);
            }
        });

        tabelaAutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "       "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaAutorMousePressed(evt);
            }
        });
        tabelaAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaAutorKeyReleased(evt);
            }
        });
        jScrollPane9.setViewportView(tabelaAutor);

        apagarAutor.setText("Apagar");
        apagarAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarAutorMouseClicked(evt);
            }
        });
        apagarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addGap(6, 6, 6)
                        .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(verAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(comboPais1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(apagarAutor)
                        .addGap(6, 6, 6)
                        .addComponent(verAutor)
                        .addGap(6, 6, 6)
                        .addComponent(jButton10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(comboPais1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Autor", jPanel7);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Tema");

        txtTema.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTemaKeyPressed(evt);
            }
        });

        jButton6.setText("Ver");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Adicionar");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        tabelaTema.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaTema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaTemaMousePressed(evt);
            }
        });
        tabelaTema.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaTemaKeyReleased(evt);
            }
        });
        jScrollPane10.setViewportView(tabelaTema);

        apagarTema.setText("Apagar");
        apagarTema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarTemaMouseClicked(evt);
            }
        });
        apagarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarTemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarTema, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(apagarTema)
                        .addGap(6, 6, 6)
                        .addComponent(jButton6)
                        .addGap(6, 6, 6)
                        .addComponent(jButton7))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Tema", jPanel5);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel17.setText("Especifico");

        txtSpec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSpecKeyPressed(evt);
            }
        });

        jButton8.setText("Ver");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton11.setText("Adicionar");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        tabelaEspecifico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaEspecifico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaEspecificoMousePressed(evt);
            }
        });
        tabelaEspecifico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaEspecificoKeyReleased(evt);
            }
        });
        jScrollPane11.setViewportView(tabelaEspecifico);

        comboArea1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tema" }));
        comboArea1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboArea1PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        apagarSpec.setText("Apagar");
        apagarSpec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarSpecMouseClicked(evt);
            }
        });
        apagarSpec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarSpecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel17)
                        .addGap(6, 6, 6)
                        .addComponent(txtSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarSpec, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(comboArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(apagarSpec)
                        .addGap(6, 6, 6)
                        .addComponent(jButton8)
                        .addGap(6, 6, 6)
                        .addComponent(jButton11))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(txtSpec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(comboArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Especifico", jPanel8);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel18.setText("Pais");

        txtPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaisKeyPressed(evt);
            }
        });

        jButton14.setText("Ver");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Adicionar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        tabelaPais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaPais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaPaisMousePressed(evt);
            }
        });
        tabelaPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaPaisKeyReleased(evt);
            }
        });
        jScrollPane12.setViewportView(tabelaPais);

        apagarPais.setText("Apagar");
        apagarPais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarPaisMouseClicked(evt);
            }
        });
        apagarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarPaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel18)
                        .addGap(6, 6, 6)
                        .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarPais, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(apagarPais)
                        .addGap(6, 6, 6)
                        .addComponent(jButton14)
                        .addGap(6, 6, 6)
                        .addComponent(jButton15))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("País", jPanel9);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel19.setText("Tipo");

        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
        });

        verTipo.setText("Ver");
        verTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verTipoMouseClicked(evt);
            }
        });

        addTipo.setText("Adicionar");
        addTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTipoMouseClicked(evt);
            }
        });
        addTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTipoActionPerformed(evt);
            }
        });

        tabelaTipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaTipoMousePressed(evt);
            }
        });
        tabelaTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaTipoKeyReleased(evt);
            }
        });
        jScrollPane13.setViewportView(tabelaTipo);

        apagarTipo.setText("Apagar");
        apagarTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarTipoMouseClicked(evt);
            }
        });
        apagarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apagarTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19)
                        .addGap(6, 6, 6)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apagarTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(verTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(apagarTipo)
                        .addGap(6, 6, 6)
                        .addComponent(verTipo)
                        .addGap(6, 6, 6)
                        .addComponent(addTipo))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Tipo", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-859)/2, (screenSize.height-568)/2, 859, 568);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        new frameTipo(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
    }//GEN-LAST:event_jButton15MouseClicked

    private void addTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTipoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_addTipoActionPerformed

    private void addTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTipoMouseClicked
        new frameTipo(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
}//GEN-LAST:event_addTipoMouseClicked

    private void verTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verTipoMouseClicked
        if(tabelaTipo.getSelectedRow()!=-1){
            Object tipo = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 0);
            String type = tipo.toString();
            try {
                new frameTipo(type, nucleo).setVisible(true);
                this.setEnabled(false);
                nucleo.setEnab(false);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_verTipoMouseClicked

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        if(evt.getKeyCode() == 10){
            try {
                Pattern pattern = Pattern.compile(jTextField8.getText());
                Object[] ola = {"Codigo", "Tipo", "Estado"};
                DefaultTableModel model = new DefaultTableModel(null, ola);
                ResultSet tipo = nucleo.listarTypes();
                String apag = "";
                while (tipo.next()) {
                    Matcher matcher = pattern.matcher(tipo.getString(2));
                    if (matcher.find()) {
                        if(tipo.getString(3)!=null) apag = "  Apagado"; else apag = "";
                        Object[] a = {tipo.getString(1), tipo.getString(2), apag};
                        model.addRow(a);
                    }
                }
                tipo.close();
                tabelaTipo.setModel(model);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_jTextField8KeyPressed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        new framePais(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);// TODO add your handling code here:
}//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if(tabelaPais.getSelectedRow()==-1) return;
        String pais = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 0).toString();
        try {
            new framePais(pais, nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton14ActionPerformed

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked

}//GEN-LAST:event_jButton14MouseClicked

    private void txtPaisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaisKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                Pattern pattern = Pattern.compile(txtPais.getText());
                Object[] ola = {"Codigo", "País","Estado"};
                DefaultTableModel model = new DefaultTableModel(null, ola);
                ResultSet pais = nucleo.ListarPais();
                String apag="";
                while (pais.next()) {
                    Matcher matcher = pattern.matcher(pais.getString(2));
                    if (matcher.find()) {
                        if(pais.getString(3)!=null) apag = "  Apagado"; else apag = "";
                        Object[] a = {pais.getString(1), pais.getString(2), apag};
                        model.addRow(a);
                    }
                }
                pais.close();
                tabelaPais.setModel(model);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_txtPaisKeyPressed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        new frameEspecifico(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
}//GEN-LAST:event_jButton11MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        if(tabelaEspecifico.getSelectedRow()==-1) return;
        String spec = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 0).toString();
        try {
            new frameEspecifico(spec, nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton8MouseClicked

    private void txtSpecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSpecKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                pesqArea();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_txtSpecKeyPressed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        new frameTema(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
}//GEN-LAST:event_jButton7MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(tabelaTema.getSelectedRow()==-1) return;
        String tema = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 0).toString();
        try {
            new frameTema(tema, nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }       // TODO add your handling code here:
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        if(tabelaTema.isCursorSet()){
            Object tema = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 1);
            String area = tema.toString();
            try {
                new frameTema(area, nucleo).setVisible(true);
                this.setEnabled(false);
                nucleo.setEnab(false);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_jButton6MouseClicked

    private void txtTemaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemaKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                Pattern pattern = Pattern.compile(txtTema.getText());
                Object[] ola = {"Codigo", "Tema","Estado"};
                DefaultTableModel model = new DefaultTableModel(null, ola);
                ResultSet tem = nucleo.listarArea();
                String apag = "";
                while (tem.next()) {
                    Matcher matcher = pattern.matcher(tem.getString(2));
                    if (matcher.find()) {
                        if(tem.getString(3)!=null) apag = "  Apagado"; else apag = "";
                        Object[] a = {tem.getString(1), tem.getString(2), apag};
                        model.addRow(a);
                    }
                }
                tem.close();
                tabelaTema.setModel(model);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_txtTemaKeyPressed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        new frameAutor(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
}//GEN-LAST:event_jButton10MouseClicked

    private void verAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verAutorMouseClicked
        if(tabelaAutor.getSelectedRow()!=-1){
            String autor = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 0).toString();

            try {
                new frameAutor(autor, nucleo).setVisible(true);
                this.setEnabled(false);
                nucleo.setEnab(false);
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_verAutorMouseClicked

    private void txtAutorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAutorKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                pesqAutor();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_txtAutorKeyPressed

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        new frameUniv(nucleo).setVisible(true);
        this.setEnabled(false);
        nucleo.setEnab(false);
}//GEN-LAST:event_jButton13MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if(tabelaUniv.getSelectedRow()==-1) return;
        String univ = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 0).toString();
        try {
            new frameUniv(univ, nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton12ActionPerformed

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked

}//GEN-LAST:event_jButton12MouseClicked

    private void txtUnivKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnivKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                pesqUniv();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_txtUnivKeyPressed

    private void comboPais3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPais3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_comboPais3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(tabelaUsers.getSelectedRow()==-1) return;
        String user = tabelaUsers.getValueAt(tabelaUsers.getSelectedRow(), 0).toString();
        try {
            new frameUser(user, nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

}//GEN-LAST:event_jButton3MouseClicked

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if(evt.getKeyCode() == 10){
            try {
                pesqUser();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}//GEN-LAST:event_jTextField2KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(tabelaDoc.getSelectedRow()==-1) return;
        String doc = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 0).toString();
        try {
            System.out.println(doc);
            new frameDoc(doc, nucleo).setVisible(true);
            this.setEnabled(false);
        nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

}//GEN-LAST:event_jButton1MouseClicked

    private void comboTemaDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTemaDocActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_comboTemaDocActionPerformed

    private void comboAutorDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAutorDocActionPerformed
                // TODO add your handling code here:
}//GEN-LAST:event_comboAutorDocActionPerformed

    private void txtpesqDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesqDocKeyPressed
        if(evt.getKeyCode() == 10){
            try {
                pesqDocs();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
}//GEN-LAST:event_txtpesqDocKeyPressed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            nucleo.fechaConeccao();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
        new login().setVisible(true);
}//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed

}//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton2MouseClicked
        try {
            nucleo.fechaConeccao();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(1);
    }//GEN-LAST:event_jToggleButton2MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            new mDownloads(nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        try {
            new mUtilizados(nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            new mFicheiros(nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        try {
            new media(nucleo).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void bCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCommentsActionPerformed
         if(tabelaDoc.getSelectedRow()==-1) return;
        String doc = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 0).toString();
        try {
            new frameComment(nucleo, doc).setVisible(true);
            this.setEnabled(false);
            nucleo.setEnab(false);
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }// TODO add your handling code here:
    }//GEN-LAST:event_bCommentsActionPerformed

    private void comboPais3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPais3ItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboPais3ItemStateChanged

    private void comboAutorDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAutorDocItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocItemStateChanged

    private void comboTemaDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTemaDocItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboTemaDocItemStateChanged

    private void comboSpecDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSpecDocItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboSpecDocItemStateChanged

    private void comboUnivDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboUnivDocItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboUnivDocItemStateChanged

    private void comboTypeDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTypeDocItemStateChanged
              // TODO add your handling code here:
    }//GEN-LAST:event_comboTypeDocItemStateChanged

    private void comboUserDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboUserDocItemStateChanged
                // TODO add your handling code here:
    }//GEN-LAST:event_comboUserDocItemStateChanged

    private void comboPais1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPais1ItemStateChanged
                    // TODO add your handling code here:
    }//GEN-LAST:event_comboPais1ItemStateChanged

    private void comboAutorDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboAutorDocMouseClicked
               // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocMouseClicked

    private void comboAutorDocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboAutorDocMousePressed
                // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocMousePressed

    private void comboAutorDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboAutorDocKeyPressed
               // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocKeyPressed

    private void comboAutorDocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboAutorDocFocusGained
               // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocFocusGained

    private void verAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_verAutorActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void comboAutorDocPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboAutorDocPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocPropertyChange

    private void comboAutorDocHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_comboAutorDocHierarchyChanged
              // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocHierarchyChanged

    private void comboAutorDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboAutorDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboAutorDocPopupMenuWillBecomeInvisible

    private void comboTemaDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboTemaDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboTemaDocPopupMenuWillBecomeInvisible

    private void comboSpecDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboSpecDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboSpecDocPopupMenuWillBecomeInvisible

    private void comboUnivDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboUnivDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboUnivDocPopupMenuWillBecomeInvisible

    private void comboTypeDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboTypeDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboTypeDocPopupMenuWillBecomeInvisible

    private void comboUserDocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboUserDocPopupMenuWillBecomeInvisible
        try {
            this.pesqDocs();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboUserDocPopupMenuWillBecomeInvisible

    private void comboPais3PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboPais3PopupMenuWillBecomeInvisible
        try {
            this.pesqUser();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboPais3PopupMenuWillBecomeInvisible

    private void comboPais2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboPais2PopupMenuWillBecomeInvisible
        try {
                pesqUniv();
            } catch (Exception ex) {
                Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
            }               // TODO add your handling code here:
    }//GEN-LAST:event_comboPais2PopupMenuWillBecomeInvisible

    private void comboPais1PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboPais1PopupMenuWillBecomeInvisible
        try {
            this.pesqAutor();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comboPais1PopupMenuWillBecomeInvisible

    private void comboArea1PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboArea1PopupMenuWillBecomeInvisible
        try {
            this.pesqArea();
        } catch (Exception ex) {
            Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
        }                // TODO add your handling code here:
    }//GEN-LAST:event_comboArea1PopupMenuWillBecomeInvisible

    private void apagarUnivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarUnivActionPerformed
        String test = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 2).toString();
        String cod = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarUniv(cod);
                JOptionPane.showMessageDialog(null, "Universidade ativada com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarUniv(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Universidade apagada com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarUnivActionPerformed

    private void apagarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarAutorActionPerformed
        String test = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 2).toString();
        String cod = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarAutor(cod);
                JOptionPane.showMessageDialog(null, "Autor ativada com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarAutor(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Autor apagada com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarAutorActionPerformed

    private void apagarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarTemaActionPerformed
        String test = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 2).toString();
        String cod = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarTema(cod);
                JOptionPane.showMessageDialog(null, "Tema ativado com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarTema(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Tema apagado com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarTemaActionPerformed

    private void apagarDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarDocsActionPerformed
        String test = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 2).toString();
        String cod = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarDoc(cod);
                JOptionPane.showMessageDialog(null, "Documento ativo com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);
        System.out.println(data);
        try {
            if(cod==null) return;
            nucleo.apagarDoc(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Documento apagado com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarDocsActionPerformed

    private void apagarSpecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarSpecActionPerformed
        String test = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 2).toString();
        String cod = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarEspec(cod);
                JOptionPane.showMessageDialog(null, "Especifico ativado com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarEspec(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Especifico apagado com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarSpecActionPerformed

    private void apagarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarPaisActionPerformed
         String test = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 2).toString();
        String cod = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarCountry(cod);
                JOptionPane.showMessageDialog(null, "País ativado com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarCountry(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"País apagado com sucesso!");       // TODO add your handling code here:
    }//GEN-LAST:event_apagarPaisActionPerformed

    private void apagarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apagarTipoActionPerformed
        String test = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 2).toString();
        String cod = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarTipo(cod);
                JOptionPane.showMessageDialog(null, "Tipo ativado com sucesso!");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarTipo(cod, data);
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Tipo apagado com sucesso!");         // TODO add your handling code here:
    }//GEN-LAST:event_apagarTipoActionPerformed

    private void tabelaDocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDocMousePressed
        String test = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarDocs.setText("Ativar");
        if(test.equals("")) apagarDocs.setText("Apagar");
                 // TODO add your handling code here:
    }//GEN-LAST:event_tabelaDocMousePressed

    private void tabelaUnivMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUnivMousePressed
        String test = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarUniv.setText("Ativar");
        if(test.equals("")) apagarUniv.setText("Apagar");       // TODO add your handling code here:
    }//GEN-LAST:event_tabelaUnivMousePressed

    private void tabelaAutorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAutorMousePressed
        String test = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarAutor.setText("Ativar");
        if(test.equals("")) apagarAutor.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaAutorMousePressed

    private void tabelaTemaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaTemaMousePressed
        String test = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarTema.setText("Ativar");
        if(test.equals("")) apagarTema.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaTemaMousePressed

    private void tabelaEspecificoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaEspecificoMousePressed
        String test = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarSpec.setText("Ativar");
        if(test.equals("")) apagarSpec.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaEspecificoMousePressed

    private void tabelaPaisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPaisMousePressed
        String test = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarPais.setText("Ativar");
        if(test.equals("")) apagarPais.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaPaisMousePressed

    private void tabelaTipoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaTipoMousePressed
        String test = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarTipo.setText("Ativar");
        if(test.equals("")) apagarTipo.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaTipoMousePressed

    private void apagarUnivMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarUnivMouseClicked
        String test = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 2).toString();
        String cod = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarUniv(cod);
                JOptionPane.showMessageDialog(null, "Universidade ativada com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarUniv(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Universidade apagada com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarUnivMouseClicked

    private void apagarAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarAutorMouseClicked
        String test = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 2).toString();
        String cod = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarAutor(cod);
                JOptionPane.showMessageDialog(null, "Autor ativada com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarAutor(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Autor apagada com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarAutorMouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
                // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void apagarTemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarTemaMouseClicked
        String test = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 2).toString();
        String cod = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarTema(cod);
                JOptionPane.showMessageDialog(null, "Tema ativado com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarTema(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Tema apagado com sucesso!");        // TODO add your handling code here:
    }//GEN-LAST:event_apagarTemaMouseClicked

    private void apagarSpecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarSpecMouseClicked
        String test = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 2).toString();
        String cod = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarEspec(cod);
                JOptionPane.showMessageDialog(null, "Especifico ativado com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarEspec(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Especifico apagado com sucesso!");                // TODO add your handling code here:
    }//GEN-LAST:event_apagarSpecMouseClicked

    private void apagarPaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarPaisMouseClicked
        String test = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 2).toString();
        String cod = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarCountry(cod);
                JOptionPane.showMessageDialog(null, "País ativado com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarCountry(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"País apagado com sucesso!");// TODO add your handling code here:
    }//GEN-LAST:event_apagarPaisMouseClicked

    private void apagarTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarTipoMouseClicked
        String test = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 2).toString();
        String cod = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 0).toString();
        if(!test.equals("")) {
            try {
                nucleo.ativarTipo(cod);
                JOptionPane.showMessageDialog(null, "Tipo ativado com sucesso!");
                apagarDocs.setText("Apagar");
                return;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }
        GregorianCalendar dateA = new GregorianCalendar();

        String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);

        try {
            if(cod==null) return;
            nucleo.apagarTipo(cod, data);
            apagarDocs.setText("Ativar");
            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
            return;
        }
        JOptionPane.showMessageDialog(null,"Tipo apagado com sucesso!");       // TODO add your handling code here:
    }//GEN-LAST:event_apagarTipoMouseClicked

    private void tabelaDocFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaDocFocusGained
        String test = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarDocs.setText("Ativar");
        if(test.equals("")) apagarDocs.setText("Apagar");// TODO add your handling code here:
    }//GEN-LAST:event_tabelaDocFocusGained

    private void tabelaDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaDocKeyPressed
               // TODO add your handling code here:
    }//GEN-LAST:event_tabelaDocKeyPressed

    private void tabelaDocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaDocKeyReleased
        String test = tabelaDoc.getValueAt(tabelaDoc.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarDocs.setText("Ativar");
        if(test.equals("")) apagarDocs.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaDocKeyReleased

    private void tabelaUsersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaUsersKeyReleased
              // TODO add your handling code here:
    }//GEN-LAST:event_tabelaUsersKeyReleased

    private void tabelaUnivKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaUnivKeyReleased
        String test = tabelaUniv.getValueAt(tabelaUniv.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarUniv.setText("Ativar");
        if(test.equals("")) apagarUniv.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaUnivKeyReleased

    private void tabelaAutorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaAutorKeyReleased
        String test = tabelaAutor.getValueAt(tabelaAutor.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarAutor.setText("Ativar");
        if(test.equals("")) apagarAutor.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaAutorKeyReleased

    private void tabelaTemaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaTemaKeyReleased
        String test = tabelaTema.getValueAt(tabelaTema.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarTema.setText("Ativar");
        if(test.equals("")) apagarTema.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaTemaKeyReleased

    private void tabelaEspecificoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaEspecificoKeyReleased
        String test = tabelaEspecifico.getValueAt(tabelaEspecifico.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarSpec.setText("Ativar");
        if(test.equals("")) apagarSpec.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaEspecificoKeyReleased

    private void tabelaPaisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaPaisKeyReleased
        String test = tabelaPais.getValueAt(tabelaPais.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarPais.setText("Ativar");
        if(test.equals("")) apagarPais.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaPaisKeyReleased

    private void tabelaTipoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaTipoKeyReleased
        String test = tabelaTipo.getValueAt(tabelaTipo.getSelectedRow(), 2).toString();
        if(!test.equals("")) apagarTipo.setText("Ativar");
        if(test.equals("")) apagarTipo.setText("Apagar");        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaTipoKeyReleased


    //Vou correndo o while e vejo se esse registo corresponde a uma de cada vez

    

    public void actListUser() throws Exception {
        Object[] ola = {"UserName"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet usrs = nucleo.listarUsers();
        while (usrs.next()) {
            Object[] a = {usrs.getString(1)};
            model.addRow(a);
        }
        usrs.close();
        tabelaUsers.setModel(model);
    }

    public void actPais() throws Exception {
        Object[] ola = {"Codigo", "Pais" , "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet p = nucleo.ListarPais();

        String apag="";
        while (p.next()) {
            if(p.getString(3)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {p.getString(1), p.getString(2), apag};
            model.addRow(a);
        }
        p.close();
        tabelaPais.setModel(model);
    }

    public void actTema() throws Exception {
        Object[] ola = {"Codigo", "Tema", "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet tem = nucleo.listarArea();
        String apag="";
        while (tem.next()) {
            if(tem.getString(3)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {tem.getString(1), tem.getString(2), apag};
            model.addRow(a);
        }
        tem.close();
        tabelaTema.setModel(model);
    }

    public void actEspecifico() throws Exception {
        Object[] ola = {"Codigo", "Especificação", "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet spc = nucleo.listarSpec();

        String apag = "";
        while (spc.next()) {
            if(spc.getString(4)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {spc.getString(1), spc.getString(2), apag};
            model.addRow(a);
        }
        spc.close();
        tabelaEspecifico.setModel(model);
    }

    public void actAutor()throws Exception {
        Object[] ola = {"Codigo", "Nome", "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet aut = nucleo.listarAutores();
        String apag = "";

        while (aut.next()) {
            if(aut.getString(5)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {aut.getString(1), aut.getString(2), apag};
            model.addRow(a);
        }
        aut.close();
        tabelaAutor.setModel(model);
    }

    public void actDocs()throws Exception {
        Object[] ola = {"Codigo", "Titulo", "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet docs = nucleo.listarDocs();
        String apag="";
        while (docs.next()) {
            if(docs.getString(13)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {docs.getString(1), docs.getString(2), apag};
            model.addRow(a);
        }
        docs.close();
        tabelaDoc.setModel(model);
    }


    public void actTipo()throws Exception {
        Object[] ola = {"Codigo", "Tipo", "Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);
        ResultSet tip = nucleo.listarTypes();
        String apag ="";
        while (tip.next()) {
            if(tip.getString(3)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {tip.getString(1), tip.getString(2), apag};
            model.addRow(a);
        }
        tip.close();
        tabelaTipo.setModel(model);
    }


    public void actUniv()throws Exception {
        Object[] ola = {"Codigo", "Universidade","Estado"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet univ = nucleo.listarUniv();

        String apag="";
        while (univ.next()) {
            if(univ.getString(4)!=null) apag = "  Apagado"; else apag = "";
            Object[] a = {univ.getString(1), univ.getString(2), apag};
            model.addRow(a);
        }
        univ.close();
        tabelaUniv.setModel(model);
    }

    
   private void actualizarComboTema() throws Exception{
        ResultSet temas = nucleo.listarArea();
        comboArea1.removeAllItems();
        comboTemaDoc.removeAllItems();
        comboArea1.addItem("Tema");
        comboTemaDoc.addItem("Tema");
        while(temas.next()){
            if(temas.getString(3)==null){
            comboArea1.addItem(temas.getString(2));
            comboTemaDoc.addItem(temas.getString(2));}
        }
        temas.close();
    }

    private void actualizarComboUniv() throws Exception{
        ResultSet univers = nucleo.listarUniv();
        comboUnivDoc.removeAllItems();
        comboUnivDoc.addItem("Universidade");
        while(univers.next()){
            if(univers.getString(4)==null) comboUnivDoc.addItem(univers.getString(2));
        }
        univers.close();

    }
    private void actualizarComboAutor() throws Exception{
        ResultSet author1 = nucleo.listarAutores();
        comboAutorDoc.removeAllItems();
        comboAutorDoc.addItem("Autor");
        while(author1.next()){
            if(author1.getString(5)==null)comboAutorDoc.addItem(author1.getString(2));
        }
        author1.close();
    }

    private void actualizarComboType() throws Exception{
        ResultSet types = nucleo.listarTypes();
        comboTypeDoc.removeAllItems();
        comboTypeDoc.addItem("Tipo");
        while(types.next()){
            if(types.getString(3)==null) comboTypeDoc.addItem(types.getString(2));
        }
        types.close();
    }


    private void actualizarComboEspec() throws Exception{
        ResultSet especs = nucleo.listarSpec();
        comboSpecDoc.removeAllItems();
        comboSpecDoc.addItem("Especifico");
        while(especs.next()){
            if(especs.getString(4)==null)comboSpecDoc.addItem(especs.getString(2));
        }
        especs.close();
    }

    private void actualizarComboUser() throws Exception{
        ResultSet user = nucleo.listarUsers();
        comboUserDoc.removeAllItems();
        comboUserDoc.addItem("User");
        while(user.next()){
            comboUserDoc.addItem(user.getString(1));
        }
        user.close();
    }

    private void actualizarComboPais() throws Exception{
        ResultSet pais = nucleo.ListarPais();
        comboPais1.removeAllItems();
        comboPais2.removeAllItems();
        comboPais3.removeAllItems();
        comboPais1.addItem("Pais");
        comboPais2.addItem("Pais");
        comboPais3.addItem("Pais");
        while(pais.next()){
            if(pais.getString(3)==null){
            comboPais1.addItem(pais.getString(2));
            comboPais2.addItem(pais.getString(2));
            comboPais3.addItem(pais.getString(2));
            }
        }
        pais.close();
    }


    //descobrir codigos
    public String verTipo(String nome)throws Exception{
        String res = "";
        ResultSet tipos = nucleo.listarTypes();
        while(tipos.next()){
            if (tipos.getString(2).equals(nome)) res = tipos.getString(1);
        }
        tipos.close();
        return res;
    }

    public String verPais(String nome)throws Exception{
        String res = "";
        ResultSet pais = nucleo.ListarPais();
        while(pais.next()){
            if (pais.getString(2).equals(nome)) res = pais.getString(1);
        }
        pais.close();
        return res;
    }

    public String verTema(String nome)throws Exception{
        String res = "";
        ResultSet temas = nucleo.listarArea();
        while(temas.next()){
            if (temas.getString(2).equals(nome)) res = temas.getString(1);
        }
        temas.close();
        return res;
    }

    public String verEspec(String nome)throws Exception{
        String res = "";
        ResultSet especs = nucleo.listarSpec();
        while(especs.next()){
            if (especs.getString(2).equals(nome)) res = especs.getString(1);
        }
        especs.close();
        return res;
    }

    public String verUniv(String nome)throws Exception{
        String res = "";
        ResultSet univs = nucleo.listarUniv();
        while(univs.next()){
            if (univs.getString(2).equals(nome)) res = univs.getString(1);
        }
        univs.close();
        return res;
    }

    public String verAutor(String nome1)throws Exception{
        String res = "";
        ResultSet autors = nucleo.listarAutores();
        while(autors.next()){
            if (autors.getString(2).equals(nome1)) res = autors.getString(1);
        }
        autors.close();
        return res;
    }

    public String verUser(String nome)throws Exception{
        String res = "";
        ResultSet users = nucleo.listarUsers();
        while(users.next()){
            if (users.getString(2).equals(nome)) res = users.getString(1);
        }
        users.close();
        return res;
    }

    public void pesqDocs() throws Exception {
        ResultSet docs = nucleo.listarDocs();

            String aut = comboAutorDoc.getSelectedItem().toString();
            String tema = comboTemaDoc.getSelectedItem().toString();
            String spec = comboSpecDoc.getSelectedItem().toString();
            String univ = comboUnivDoc.getSelectedItem().toString();
            String tipo = comboTypeDoc.getSelectedItem().toString();
            String user = comboUserDoc.getSelectedItem().toString();


            if(aut.equals("Autor")) aut="";
            if(tema.equals("Tema")) tema="";
            if(spec.equals("Specific")) spec="";
            if(univ.equals("Universidade")) univ ="";
            if(tipo.equals("Tipo")) tipo = "";
            if(user.equals("User")) user = "";

            
            Pattern patNome = Pattern.compile(txtpesqDoc.getText());
            Pattern patAut = Pattern.compile(verAutor(aut));
            Pattern patTema = Pattern.compile(verTema(tema));
            Pattern patSpec = Pattern.compile(verEspec(spec));
            Pattern patUniv = Pattern.compile(verUniv(univ));
            Pattern patTipo = Pattern.compile(verTipo(tipo));
            Pattern patUser = Pattern.compile(verUser(user));

            Object[] ola = {"Codigo", "Nome","Estado"};
            DefaultTableModel model = new DefaultTableModel(null,ola);

            String autM ="";
            String temaM = "";
            String specM = "";
            String univM = "";
            String tipoM = "";
            String userM = "";
            String apag = "";

            while(docs.next()){
                if(docs.getString(8)==null) autM = "";
                else autM = docs.getString(8);
                if(docs.getString(5)==null) temaM ="";
                else temaM = docs.getString(5);
                if(docs.getString(6)==null) specM="";
                else specM = docs.getString(6);
                if(docs.getString(7)==null) univM="";
                else univM = docs.getString(7);
                if(docs.getString(9)==null) tipoM="";
                else tipoM = docs.getString(9);
                if(docs.getString(10)==null) userM="";
                else userM = docs.getString(10);

                

                Matcher matchNomeDoc = patNome.matcher(docs.getString(2));
                Matcher matchAut = patAut.matcher(autM);
                Matcher matchTema = patTema.matcher(temaM);
                Matcher matchSpec = patSpec.matcher(specM);
                Matcher matchUniv = patUniv.matcher(univM);
                Matcher matchTipo = patTipo.matcher(tipoM);
                Matcher matchUser = patUser.matcher(userM);

                if(matchNomeDoc.find() && matchAut.find() && matchTema.find() && matchSpec.find() && matchUniv.find() && matchTipo.find() && matchUser.find()){
                    if(docs.getString(13)!=null) apag = "  Apagado"; else apag = "";
                    Object[] a = {docs.getString(1), docs.getString(2), apag};
                    model.addRow(a);
                }
            }
            docs.close();
            tabelaDoc.setModel(model);
    }

    public void pesqUser() throws Exception{
        String pais = "";
            if(!comboPais3.getSelectedItem().toString().equals("País")){
                pais = verPais(comboPais3.getSelectedItem().toString());
            }
            Pattern pattern1 = Pattern.compile(pais);
            Pattern pattern = Pattern.compile(jTextField2.getText());
            Object[] ola = {"UserName"};
            DefaultTableModel model = new DefaultTableModel(null,ola);
            ResultSet usrs = nucleo.listarUsers();
            while (usrs.next()) {
                Matcher matcher1 = pattern1.matcher(usrs.getString(2));
                Matcher matcher = pattern.matcher(usrs.getString(1));
                if (matcher.find() && matcher1.find()) {
                    Object[] a = {usrs.getString(1)};
                    model.addRow(a);
                }
            }
            usrs.close();
            tabelaUsers.setModel(model);
    }

    public void pesqArea() throws Exception{
            String area = "";
            if(!comboArea1.getSelectedItem().toString().equals("Tema")){
                area = verTema(comboArea1.getSelectedItem().toString());
            }
            Pattern pattern = Pattern.compile(txtSpec.getText());
            Pattern pattern1 = Pattern.compile(area);
            Object[] ola = {"Codigo", "Especifico", "Estado"};
            DefaultTableModel model = new DefaultTableModel(null,ola);
            ResultSet spec = nucleo.listarSpec();
            String apag="";
            while(spec.next()){
                if(spec.getString(3)==null) area="";
                else area = spec.getString(3);
                Matcher matcher1 = pattern1.matcher(area);
                Matcher matcher = pattern.matcher(spec.getString(2));
                if(matcher.find() && matcher1.find()){
                        if(spec.getString(4)!=null) apag = "  Apagado"; else apag = "";
                        Object[] a = {spec.getString(1), spec.getString(2), apag};
                        model.addRow(a);

                }
            }
            spec.close();
            tabelaEspecifico.setModel(model);

    }

    public void pesqAutor() throws Exception{
        String pais = "";
            if(!comboPais1.getSelectedItem().toString().equals("País")){
                pais = verPais(comboPais1.getSelectedItem().toString());
            }
            Pattern pattern = Pattern.compile(txtAutor.getText());
            Pattern pattern1 = Pattern.compile(pais);
            Object[] ola = {"Codigo", "Autor", "Estado"};
            DefaultTableModel model = new DefaultTableModel(null,ola);
            ResultSet autor = nucleo.listarAutores();
            String apag="";
            while(autor.next()){
                if(autor.getString(4)==null) pais = "";
                else pais = autor.getString(4);
                Matcher matcher1 = pattern1.matcher(pais);
                Matcher matcher = pattern.matcher(autor.getString(2));
                if(matcher.find() && matcher1.find()){
                        if(autor.getString(5)!=null) apag = "  Apagado"; else apag = "";
                        Object[] a = {autor.getString(1), autor.getString(2)};
                        model.addRow(a);

                }
            }
            autor.close();
            tabelaAutor.setModel(model);

    }

    public void pesqUniv() throws Exception{
        String pais = "";
            if(!comboPais2.getSelectedItem().toString().equals("País")){
                pais = verPais(comboPais2.getSelectedItem().toString());
            }
        System.out.println(pais);
            Pattern pattern1 = Pattern.compile(pais);
            Pattern pattern = Pattern.compile(txtUniv.getText());
            Object[] ola = {"Código","Universiade","Estado"};
            DefaultTableModel model = new DefaultTableModel(null,ola);
            ResultSet univ = nucleo.listarUniv();
            String apag = "";
            while (univ.next()) {
                Matcher matcher1 = pattern1.matcher(univ.getString(1));
                Matcher matcher = pattern.matcher(univ.getString(2));
                if (matcher.find() && matcher1.find()) {
                    if(univ.getString(4)!=null) apag = "  Apagado"; else apag = "";
                    Object[] a = {univ.getString(1), univ.getString(2)};
                    model.addRow(a);
                }
            }
            univ.close();
            tabelaUniv.setModel(model);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frameGestao(new Nucleo()).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(frameGestao.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTipo;
    private javax.swing.JButton apagarAutor;
    private javax.swing.JButton apagarDocs;
    private javax.swing.JButton apagarPais;
    private javax.swing.JButton apagarSpec;
    private javax.swing.JButton apagarTema;
    private javax.swing.JButton apagarTipo;
    private javax.swing.JButton apagarUniv;
    private javax.swing.JButton bComments;
    private javax.swing.JComboBox comboArea1;
    private javax.swing.JComboBox comboAutorDoc;
    private javax.swing.JComboBox comboPais1;
    private javax.swing.JComboBox comboPais2;
    private javax.swing.JComboBox comboPais3;
    private javax.swing.JComboBox comboSpecDoc;
    private javax.swing.JComboBox comboTemaDoc;
    private javax.swing.JComboBox comboTypeDoc;
    private javax.swing.JComboBox comboUnivDoc;
    private javax.swing.JComboBox comboUserDoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JLabel lblAutor;
    private javax.swing.JLabel lblDocs;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblSpec;
    private javax.swing.JLabel lblTema;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblUniv;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTable tabelaAutor;
    private javax.swing.JTable tabelaDoc;
    private javax.swing.JTable tabelaEspecifico;
    private javax.swing.JTable tabelaPais;
    private javax.swing.JTable tabelaTema;
    private javax.swing.JTable tabelaTipo;
    private javax.swing.JTable tabelaUniv;
    private javax.swing.JTable tabelaUsers;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtSpec;
    private javax.swing.JTextField txtTema;
    private javax.swing.JTextField txtUniv;
    private javax.swing.JTextField txtpesqDoc;
    private javax.swing.JButton verAutor;
    private javax.swing.JButton verTipo;
    // End of variables declaration//GEN-END:variables

}

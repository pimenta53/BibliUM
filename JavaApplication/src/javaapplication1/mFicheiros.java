/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mFicheiros.java
 *
 * Created on 5/Jan/2011, 22:35:07
 */


package javaapplication1;

import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.JFrame;


import org.jfree.chart.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Milton
 */
public class mFicheiros extends javax.swing.JFrame {

    Nucleo nucleo = null;
    /** Creates new form mFicheiros */
    public mFicheiros() {
        initComponents();
    }

    public mFicheiros(Nucleo nuc) throws Exception{
        super("Número de ficheiros por utilizador");
        initComponents();
        nucleo = nuc;

//        PreparedStatement stmt =con.prepareStatement(sql);
        ResultSet dt = nucleo.getMficheios();
        CategoryDataset dataset = mFicheiros.createDataset(dt);
        JFreeChart chart = mFicheiros.createBarChart(dataset);
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(400, 300));
        setContentPane(panel);
        dt.close();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-529)/2, (screenSize.height-407)/2, 529, 407);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        nucleo.setEnab(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    public mFicheiros(String title) throws Exception{
        super(title);
        ResultSet dt = nucleo.getMficheios();
        CategoryDataset dataset = mFicheiros.createDataset(dt);
        JFreeChart chart = mFicheiros.createBarChart(dataset);
        ChartPanel panel = new ChartPanel(chart);
        panel.setPreferredSize(new Dimension(400, 300));
        setContentPane(panel);
        dt.close();
    }

private static CategoryDataset createDataset(ResultSet dt) throws Exception {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    ResultSet dx = dt;
    int x=1;
    while(dx.next() && x<5){
        dataset.addValue(Integer.parseInt(dx.getString(2)), "", dx.getString(1));
        x++;
    }
    dx.close();
    return dataset;
}


private static JFreeChart createBarChart(CategoryDataset dataset) {
    JFreeChart chart = ChartFactory.createBarChart(
    "Número de ficheiros por utilizador", //Titulo
    "Nome de utilizador", // Eixo X
    "Número de ficheiros", //Eixo Y
    dataset, // Dados para o grafico
    PlotOrientation.VERTICAL, //Orientacao do grafico
    false, false, false); // exibir: legendas, tooltips, url
    return chart;
}

public static void main( String[] args ) throws Exception{
    mFicheiros chart = new mFicheiros("Número de ficheiros por utilizador");
    chart.pack();
    chart.setVisible(true);
}
    /**
    * @param args the command line arguments
    */
    
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables



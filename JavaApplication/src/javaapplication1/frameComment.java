/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frameComment.java
 *
 * Created on 29/Jan/2011, 11:34:48
 */

package javaapplication1;

import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Milton
 */
public class frameComment extends javax.swing.JFrame {
    Nucleo nucleo = null;
    String codigo = "";
    /** Creates new form frameComment */
    public frameComment() {
        initComponents();
    }

    public frameComment(Nucleo nuc, String doc) throws Exception{
        initComponents();
        nucleo = nuc;
        codigo = doc;
        ResultSet coment = nucleo.getDoc(codigo);
        while(coment.next())
        jCod.setText(coment.getString(2));
        this.actualiza();

    }

     public void actualiza() throws Exception{
        Object[] ola = {"Codigo", "Utilizador", "Data", "Comentário"};
        DefaultTableModel model = new DefaultTableModel(null,ola);

        ResultSet p = nucleo.ListarComments(codigo);

        while (p.next()) {
            Object[] a = {p.getString(1), p.getString(2), p.getString(3), p.getString(4)};
            model.addRow(a);
        }
        p.close();
        tabelaComments.setModel(model);
     }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCod = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaComments = new javax.swing.JTable();
        txtComment = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel1.setText("Comentários");

        jCod.setText("jLabel2");

        jButton1.setText("Apagar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fechar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tabelaComments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaComments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCommentsMouseClicked(evt);
            }
        });
        tabelaComments.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaCommentsFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaComments);

        txtComment.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jCod, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jCod)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1)
                        .addGap(1, 1, 1)
                        .addComponent(jButton2)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-567)/2, (screenSize.height-438)/2, 567, 438);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(tabelaComments.getSelectedRow()==-1){ JOptionPane.showMessageDialog(null, "Seleccione um comentario");}
        else{
            String doc = tabelaComments.getValueAt(tabelaComments.getSelectedRow(), 0).toString();
            GregorianCalendar dateA = new GregorianCalendar();

            String data = dateA.get(Calendar.YEAR) + "." + dateA.get(Calendar.MONTH)+1 + "." + dateA.get(Calendar.DAY_OF_MONTH);
            System.out.println(data);
            try {
                nucleo.deleteComment(data, doc);
            } catch (Exception ex) {
                Logger.getLogger(frameComment.class.getName()).log(Level.SEVERE, null, ex);
            }
            //recarrega a lista
            try {
                this.actualiza();
                txtComment.setText("");
            } catch (Exception ex) {
                Logger.getLogger(frameComment.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabelaCommentsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaCommentsFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaCommentsFocusGained

    private void tabelaCommentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCommentsMouseClicked
        if(tabelaComments.getSelectedRow()==-1) return;
        String doc = tabelaComments.getValueAt(tabelaComments.getSelectedRow(), 0).toString();
        try {
            txtComment.setText(nucleo.getComment(doc));
        } catch (Exception ex) {
            Logger.getLogger(frameComment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelaCommentsMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        nucleo.setEnab(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        nucleo.setEnab(true);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameComment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jCod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaComments;
    private java.awt.TextArea txtComment;
    // End of variables declaration//GEN-END:variables

}
